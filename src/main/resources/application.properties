spring.datasource.url = jdbc:postgresql://localhost:5432/sietp?serverTimezone=America/Bogota

# nombre de usuario y contrase�a
spring.datasource.username = postgres
spring.datasource.password = postgres

# mostrar sentencias SQL en la consola
spring.jpa.show-sql = true

# actualizar base de datos y crear entidades
spring.jpa.hibernate.ddl-auto = update

# driver MariaDB
spring.datasource.driver-class-name = org.postgresql.Driver

# hibernate genera SQL optimizado
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

logging.file.name=logs/log.log

# Salida a consola.
#logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n
# Salida a consola con colores.
logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n

# Salida a un fichero
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%

#horas
#spring.jackson.time-zone: America/Bogota


#######thymeleaf#########
# Configuraci�n de plantilla
# Esta configuraci�n de desarrollo es falsa para evitar reiniciar el servidor despu�s de cambiar la plantilla
spring.thymeleaf.cache=false
# Esto es para configurar la ruta de la plantilla, el valor predeterminado son las plantillas, no es necesario configurarlo
spring.thymeleaf.prefix=classpath:/templates/

# Modo plantilla
spring.thymeleaf.mode=HTML5
#######thymeleaf#########